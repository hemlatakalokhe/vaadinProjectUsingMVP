package com.example.BasicProjectUsingVaadin7;

import java.util.Collection;
import org.springframework.beans.factory.annotation.Autowired;

import com.example.BasicProjectUsingVaadin7.impl.MasterServiceImpl;
import com.example.BasicProjectUsingVaadin7.impl.SpringDataServiceImpl;
import com.example.BasicProjectUsingVaadin7.model.CountryEntity;
import com.example.BasicProjectUsingVaadin7.model.StyleEntity;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.VaadinSession;
import com.vaadin.spring.annotation.SpringView;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Grid;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;


@SpringView(name=StyleView.NAME)
public class StyleView extends VerticalLayout implements View
{

	private static final long serialVersionUID = 1L;
	public static final String NAME = "Style";
	
	@Autowired
	private MasterServiceImpl masterServiceImpl;
	
	@Autowired
	private SpringDataServiceImpl serviceImpl;
	
	private TextField filter;
	private HorizontalLayout layout;
	private Button search;
	private Button update;
	private Button delete;
	private Button addStyle;
	private FormLayout formLayout;
	private VerticalLayout verticalLayout;
	private HorizontalLayout horizontalLayout;
	private Button logout;
	private Button refresh;
	
	
	@Override
	public void enter(ViewChangeEvent event) 
	{	
			verticalLayout=new VerticalLayout();
			horizontalLayout=new HorizontalLayout();
			formLayout=new FormLayout();
			layout=new HorizontalLayout();
			filter=new TextField();
			search=new Button("Search");
			update=new Button("Update");
			delete=new Button("Delete");
			addStyle=new Button("Add");
			refresh=new Button("Refresh");
			logout=new Button("LogOut");
			
			Iterable<CountryEntity> countryEntities=masterServiceImpl.findAllCountry();
			ComboBox countryComboBox=new ComboBox();
			BeanItemContainer<CountryEntity> beanCountry=new BeanItemContainer<>(CountryEntity.class);
			beanCountry.addAll((Collection<? extends CountryEntity>) countryEntities);
			countryComboBox.addItems(beanCountry);
			//ListDataProvider<CountryEntity> countryDataProvider=DataProvider.ofCollection((Collection<CountryEntity>) countryEntities);
			
			
			Iterable<StyleEntity> styleEntities=serviceImpl.findAllStyles();
			Grid styleGrid=new Grid();
			
			styleGrid.setColumns("id","styleNo","desc","country");
			
			BeanItemContainer<StyleEntity> styleContainer=new BeanItemContainer<>(StyleEntity.class);
			styleContainer.addAll((Collection<? extends StyleEntity>) styleEntities);
			
			
			
			
/*			search.addClickListener(e -> {
				Notification.show("Filter "+filter.getValue());
				Notification.show("COMBO "+countryComboBox.getValue());
				Iterable<StyleEntity> filterStyle = serviceImpl.filterByStyleNoAndCountry(filter.getValue(),
						countryComboBox.getValue());
				styleGrid.clearSortOrder();
				styleGrid.setContainerDataSource(styleContainer);
			//	styleGrid.setDataProvider(dataProvider1);

			});
			
			
			styleGrid.addSelectionListener(e5->{
				if(styleGrid.asSingleSelect() != null)
				{
					update.addClickListener(e2->{
						VaadinSession.getCurrent().setAttribute("update", "update");
						VaadinSession.getCurrent().setAttribute("styleData", styleGrid.getSelectedItems());
						getUI().getNavigator().navigateTo(
							UpdateView.NAME);
					});
					
					delete.addClickListener(e4->{
						VaadinSession.getCurrent().setAttribute("styleData", styleGrid.getSelectedItems());
						DeleteWindow sub = new DeleteWindow();

					    getUI().addWindow(sub);
					});
				}
				
				
			});
		
			addStyle.addClickListener(e3->{
				VaadinSession.getCurrent().setAttribute("update", "add");
				getUI().getNavigator().navigateTo(
						UpdateView.NAME);
			});
		
			
			logout.addClickListener(e5->{
				getUI().getNavigator().navigateTo(
						LoginView.NAME);
			});
			
			
			refresh.addClickListener(e6->{
				styleGrid.setDataProvider(styleDataProvider);
			});
			*/
		
			//styleGrid.setDataProvider(styleDataProvider);
			styleGrid.setSizeFull();
			//verticalLayout.addComponents();
			
			layout.addComponents(filter,countryComboBox,search,refresh,addStyle,update,delete,logout);
			layout.setSpacing(true);
		//	horizontalLayout.addComponents(styleGrid,verticalLayout);;
			
			addComponents(layout,styleGrid);
			setDefaultComponentAlignment(Alignment.MIDDLE_CENTER);
	}
	
}


