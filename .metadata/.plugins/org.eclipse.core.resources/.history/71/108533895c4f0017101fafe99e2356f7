package com.example.BasicProjectUsingVaadin;

import java.util.Collection;
import java.util.Set;
import org.springframework.beans.factory.annotation.Autowired;
import com.example.BasicProjectUsingVaadin.dao.PresenterDao;
import com.example.BasicProjectUsingVaadin.dao.PresenterMasterDao;
import com.example.BasicProjectUsingVaadin.dto.CountryDTO;
import com.example.BasicProjectUsingVaadin.dto.StyleDTO;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.VaadinSession;
import com.vaadin.spring.annotation.SpringView;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextField;


@SpringView(name = SaveAndUpdateView.NAME)
public class SaveAndUpdateView extends FormLayout implements View {

	private static final long serialVersionUID = 1L;
	public static final String NAME = "Update";
	private TextField styleNo;
	private TextField styleDesc;
	private Button update;
	private Button cancel;
	int id = 0;

	@Autowired
	private PresenterDao presenterDao;

	@Autowired
	private PresenterMasterDao presenterMasterDao;
	
	private Button save;
	
	private HorizontalLayout layout;

	@Override
	public void enter(ViewChangeEvent event) {
		layout = new HorizontalLayout();
		styleNo = new TextField("Enter Style Number");
		styleDesc = new TextField("Enter Style Description");
		update = new Button("Update");
		cancel = new Button("Cancel");
		save = new Button("Save");
		Iterable<CountryDTO> countryEntities = presenterMasterDao.findAllCountry();
		ComboBox<CountryDTO> countryComboBox = new ComboBox<CountryDTO>("Select Country");
		countryComboBox.setItems((Collection<CountryDTO>) countryEntities);
		String status = (String) VaadinSession.getCurrent().getAttribute("update");

		if (status.equals("update")) {
			@SuppressWarnings("unchecked")
			Set<StyleDTO> style = (Set<StyleDTO>) VaadinSession.getCurrent().getAttribute("Style");
			for (StyleDTO styleEntity : style) {
				styleNo.setValue(styleEntity.getStyleNo());
				styleDesc.setValue(styleEntity.getDesc());
				countryComboBox.setValue(styleEntity.getCountry());
				id = styleEntity.getId();
			}

			update.addClickListener(e -> {
				StyleDTO pStyle = presenterDao.findByStyleId(id);
				pStyle.setStyleNo(styleNo.getValue());
				pStyle.setDesc(styleDesc.getValue());
				pStyle.setCountry(countryComboBox.getSelectedItem().get());
				presenterDao.saveStyle(pStyle);
				getUI().getNavigator().navigateTo(StyleView.NAME);
			});

			layout.addComponents(update, cancel);
			addComponents(styleNo, styleDesc, countryComboBox, layout);
		} 
		else 
		{
			save.addClickListener(e -> {
				StyleDTO styleEntity = new StyleDTO();

				styleEntity.setStyleNo(styleNo.getValue());
				styleEntity.setDesc(styleDesc.getValue());
				styleEntity.setCountry(countryComboBox.getSelectedItem().get());
				if (presenterDao.isStyleExistV(styleEntity)) {
					Notification.show("Already exist");

				} else {
					presenterDao.saveStyle(styleEntity);
					getUI().getNavigator().navigateTo(StyleView.NAME);
				}

			});

			layout.addComponents(save, cancel);
			addComponents(styleNo, styleDesc, countryComboBox, layout);
		}
		
		cancel.addClickListener(e2 -> {
			getUI().getNavigator().navigateTo(StyleView.NAME);
		});

	}

}
